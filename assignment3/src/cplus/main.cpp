//
//  main.cpp
//  ComputerVisionProject3
//
//  Created by HJKBD on 3/19/17.
//  Copyright Â© 2017 HJKBD. All rights reserved.
//

#include "header.h"
#include "calibration.h"
#include "distortion.h"

using namespace cv;
using namespace std;
const Size checkerboardDimensions = Size(7,7);

int main(int argc, const char* argv[]) {
    string file = "../img.JPG";
    Mat img = imread(file);
    // Check image reading
    if( !img.data ) {
        cout<< " --(!) Error reading images " << endl; return -1;
    }
    Mat img_distortion, img_calibration;
    img.copyTo(img_distortion);
    img.copyTo(img_calibration);
    Mat Distortion = CalibrateDistortion(img_distortion);
    Mat Undistorted_img = CalibrateOpenCV(img_calibration);
    Mat P = CameraCalibration(Undistorted_img);
}


//#include "gold_standard.h"
//int main(int argc, const char* argv[]) {
//    std::vector<cv::Point3d> xW = {
//        {0,0,0},
//        {24,0,0},
//        {48,0,0},
//        {72,0,0},
//        {96,0,0},
//        {120,0,0},
//        {144,0,0},
//        {168,0,0},
//        {192,0,24},
//        {192,0,48},
//        {192,0,72},
//        {192,0,96},
//        {192,0,120},
//        {192,0,144},
//        {192,0,168},
//        {192,0,192},
//        {0,24,0},
//        {24,24,0},
//        {48,24,0},
//        {72,24,0},
//        {96,24,0},
//        {120,24,0},
//        {144,24,0},
//        {168,24,0},
//        {192,24,24},
//        {192,24,48},
//        {192,24,72},
//        {192,24,96},
//        {192,24,120},
//        {192,24,144},
//        {192,24,168},
//        {192,24,192},
//        {0,48,0},
//        {24,48,0},
//        {48,48,0},
//        {72,48,0},
//        {96,48,0},
//        {120,48,0},
//        {144,48,0},
//        {168,48,0},
//        {192,48,24},
//        {192,48,48},
//        {192,48,72},
//        {192,48,96},
//        {192,48,120},
//        {192,48,144},
//        {192,48,168},
//        {192,48,192},
//        {0,72,0},
//        {24,72,0},
//        {48,72,0},
//        {72,72,0},
//        {96,72,0},
//        {120,72,0},
//        {144,72,0},
//        {168,72,0},
//        {192,72,24},
//        {192,72,48},
//        {192,72,72},
//        {192,72,96},
//        {192,72,120},
//        {192,72,144},
//        {192,72,168},
//        {192,72,192},
//        {0,96,0},
//        {24,96,0},
//        {48,96,0},
//        {72,96,0},
//        {96,96,0},
//        {120,96,0},
//        {144,96,0},
//        {168,96,0},
//        {192,96,24},
//        {192,96,48},
//        {192,96,72},
//        {192,96,96},
//        {192,96,120},
//        {192,96,144},
//        {192,96,168},
//        {192,96,192},
//        {0,120,0},
//        {24,120,0},
//        {48,120,0},
//        {72,120,0},
//        {96,120,0},
//        {120,120,0},
//        {144,120,0},
//        {168,120,0},
//        {192,120,24},
//        {192,120,48},
//        {192,120,72},
//        {192,120,96},
//        {192,120,120},
//        {192,120,144},
//        {192,120,168},
//        {192,120,192},
//        {0,144,0},
//        {24,144,0},
//        {48,144,0},
//        {72,144,0},
//        {96,144,0},
//        {120,144,0},
//        {144,144,0},
//        {168,144,0},
//        {192,144,24},
//        {192,144,48},
//        {192,144,72},
//        {192,144,96},
//        {192,144,120},
//        {192,144,144},
//        {192,144,168},
//        {192,144,192},
//        {0,168,0},
//        {24,168,0},
//        {48,168,0},
//        {72,168,0},
//        {96,168,0},
//        {120,168,0},
//        {144,168,0},
//        {168,168,0},
//        {192,168,24},
//        {192,168,48},
//        {192,168,72},
//        {192,168,96},
//        {192,168,120},
//        {192,168,144},
//        {192,168,168},
//        {192,168,192},
//        {0,192,0},
//        {24,192,0},
//        {48,192,0},
//        {72,192,0},
//        {96,192,0},
//        {120,192,0},
//        {144,192,0},
//        {168,192,0},
//        {192,192,24},
//        {192,192,48},
//        {192,192,72},
//        {192,192,96},
//        {192,192,120},
//        {192,192,144},
//        {192,192,168},
//        {192,192,192},
//        {0,216,0},
//        {24,216,0},
//        {48,216,0},
//        {72,216,0},
//        {96,216,0},
//        {120,216,0},
//        {144,216,0},
//        {168,216,0},
//        {192,216,24},
//        {192,216,48},
//        {192,216,72},
//        {192,216,96},
//        {192,216,120},
//        {192,216,144},
//        {192,216,168},
//        {192,216,192}
//    };
//    std::vector<cv::Point2d>xi = {
//        {128,111},
//        {135,113},
//        {147,114},
//        {154,116},
//        {165,117},
//        {171,118},
//        {182,120},
//        {188,121},
//        {207,121},
//        {214,120},
//        {225,118},
//        {233,117},
//        {245,114},
//        {253,113},
//        {266,111},
//        {275,110},
//        {128,123},
//        {136,123},
//        {147,125},
//        {154,126},
//        {165,127},
//        {172,128},
//        {182,130},
//        {188,130},
//        {207,130},
//        {214,129},
//        {225,128},
//        {233,127},
//        {245,125},
//        {253,124},
//        {266,122},
//        {275,121},
//        {129,138},
//        {136,139},
//        {148,140},
//        {155,141},
//        {166,142},
//        {172,142},
//        {182,143},
//        {188,144},
//        {207,144},
//        {214,143},
//        {225,142},
//        {233,141},
//        {245,139},
//        {253,138},
//        {266,137},
//        {275,136},
//        {129,149},
//        {137,149},
//        {148,150},
//        {155,151},
//        {166,152},
//        {172,152},
//        {183,153},
//        {188,153},
//        {207,153},
//        {214,153},
//        {226,152},
//        {233,151},
//        {245,150},
//        {253,149},
//        {266,148},
//        {275,147},
//        {129,164},
//        {137,164},
//        {149,165},
//        {155,165},
//        {166,166},
//        {173,166},
//        {183,167},
//        {189,167},
//        {208,167},
//        {214,167},
//        {226,166},
//        {233,165},
//        {245,164},
//        {253,163},
//        {265,162},
//        {274,162},
//        {130,175},
//        {138,175},
//        {149,175},
//        {156,175},
//        {166,176},
//        {173,176},
//        {183,176},
//        {189,176},
//        {208,176},
//        {215,176},
//        {226,175},
//        {233,175},
//        {245,174},
//        {253,174},
//        {265,173},
//        {274,172},
//        {130,190},
//        {138,190},
//        {149,190},
//        {156,190},
//        {167,190},
//        {173,190},
//        {183,189},
//        {189,190},
//        {208,190},
//        {215,189},
//        {226,189},
//        {233,189},
//        {245,188},
//        {253,188},
//        {265,187},
//        {274,187},
//        {131,200},
//        {138,200},
//        {150,200},
//        {156,199},
//        {167,199},
//        {174,199},
//        {184,199},
//        {189,199},
//        {208,198},
//        {215,199},
//        {226,198},
//        {233,198},
//        {245,198},
//        {253,198},
//        {265,198},
//        {274,198},
//        {132,215},
//        {139,215},
//        {150,214},
//        {157,214},
//        {167,213},
//        {174,213},
//        {184,212},
//        {189,212},
//        {208,212},
//        {215,212},
//        {226,212},
//        {233,212},
//        {245,212},
//        {253,212},
//        {265,212},
//        {274,212},
//        {133,225},
//        {140,225},
//        {150,224},
//        {157,223},
//        {168,223},
//        {174,222},
//        {184,221},
//        {190,221},
//        {208,221},
//        {215,221},
//        {226,221},
//        {233,222},
//        {245,222},
//        {253,222},
//        {265,223},
//        {274,223}
//    };
//    //cv::Mat mat = gold_standard(xi,xW);
////    if( argc != 2 ) {
////        readme(); return -1;
////    }
//    // Read the original image
////    Mat img = imread( argv[1]);
//    //std::string name = "images/pattern.jpg";
//    std::string name = "images/GOPR0034.jpg";
//    cv::Mat img = cv::imread(name);
//    // Check image reading
//    if( !img.data ) {
//        cout<< " --(!) Error reading images " << endl; return -1;
//    }
//    cv::Mat img_distortion, img_calibration;
//    img.copyTo(img_distortion);
//    img.copyTo(img_calibration);
//    //cv::Mat Distortion = CalibrateDistortion(img_distortion);
//    
//    cv::Mat Undistorted_img = CalibrateOpenCV(img_calibration);
//    cv::Mat P = CameraCalibration(Undistorted_img);
//    
//    return 1;
//}

